<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bestsort.bbslite.mapper.FansMapper">
  <resultMap id="BaseResultMap" type="cn.bestsort.bbslite.pojo.model.Fans">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="fans_by_id" jdbcType="BIGINT" property="fansById" />
    <result column="fans_to_id" jdbcType="BIGINT" property="fansToId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="gmt_created" jdbcType="BIGINT" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="BIGINT" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, fans_by_id, fans_to_id, status, gmt_created, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="cn.bestsort.bbslite.pojo.model.FansExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fans
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fans
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from fans
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.bestsort.bbslite.pojo.model.FansExample">
    delete from fans
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.bestsort.bbslite.pojo.model.Fans">
    insert into fans (id, fans_by_id, fans_to_id, 
      status, gmt_created, gmt_modified
      )
    values (#{id,jdbcType=BIGINT}, #{fansById,jdbcType=BIGINT}, #{fansToId,jdbcType=BIGINT}, 
      #{status,jdbcType=TINYINT}, #{gmtCreated,jdbcType=BIGINT}, #{gmtModified,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.bestsort.bbslite.pojo.model.Fans">
    insert into fans
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fansById != null">
        fans_by_id,
      </if>
      <if test="fansToId != null">
        fans_to_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="gmtCreated != null">
        gmt_created,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fansById != null">
        #{fansById,jdbcType=BIGINT},
      </if>
      <if test="fansToId != null">
        #{fansToId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="gmtCreated != null">
        #{gmtCreated,jdbcType=BIGINT},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bestsort.bbslite.pojo.model.FansExample" resultType="java.lang.Long">
    select count(*) from fans
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fans
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.fansById != null">
        fans_by_id = #{record.fansById,jdbcType=BIGINT},
      </if>
      <if test="record.fansToId != null">
        fans_to_id = #{record.fansToId,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.gmtCreated != null">
        gmt_created = #{record.gmtCreated,jdbcType=BIGINT},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fans
    set id = #{record.id,jdbcType=BIGINT},
      fans_by_id = #{record.fansById,jdbcType=BIGINT},
      fans_to_id = #{record.fansToId,jdbcType=BIGINT},
      status = #{record.status,jdbcType=TINYINT},
      gmt_created = #{record.gmtCreated,jdbcType=BIGINT},
      gmt_modified = #{record.gmtModified,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bestsort.bbslite.pojo.model.Fans">
    update fans
    <set>
      <if test="fansById != null">
        fans_by_id = #{fansById,jdbcType=BIGINT},
      </if>
      <if test="fansToId != null">
        fans_to_id = #{fansToId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="gmtCreated != null">
        gmt_created = #{gmtCreated,jdbcType=BIGINT},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bestsort.bbslite.pojo.model.Fans">
    update fans
    set fans_by_id = #{fansById,jdbcType=BIGINT},
      fans_to_id = #{fansToId,jdbcType=BIGINT},
      status = #{status,jdbcType=TINYINT},
      gmt_created = #{gmtCreated,jdbcType=BIGINT},
      gmt_modified = #{gmtModified,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>